swagger: '2.0'
info:
  version: 0.0.1
  title: testToolChain
  description: This is sample API being generated by cedrus-api generator
host: 'localhost:3000'
basePath: /api
schemes:
  - http
  - https
produces:
  - application/json
paths:
  /customers:
    get:
      tags:
        - Customer
      description: Gets all customers from the system that the user has access to
      operationId: getCustomer
      produces:
        - application/json
      x-swagger-router-controller: Customer
      responses:
        '200':
          description: customer response
          schema:
            type: array
            items:
              $ref: '#/definitions/customer'
        '404':
          description: customer response
          schema:
            type: object
        '500':
          description: customer response
          schema:
            type: object
    post:
      tags:
        - Customer
      description: Posts all customers from the system that the user has access to
      operationId: postCustomer
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: Customer
      responses:
        '204':
          description: customer response
          schema:
            type: array
            items:
              $ref: '#/definitions/customer'
        '404':
          description: customer response
          schema:
            type: object
        '500':
          description: customer response
          schema:
            type: object
      parameters:
        - name: customers
          in: body
          schema:
            $ref: '#/definitions/customer'
    put:
      tags:
        - Customer
      description: Puts all customers from the system that the user has access to
      operationId: putCustomer
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: Customer
      responses:
        '204':
          description: customer response
          schema:
            type: array
            items:
              $ref: '#/definitions/customer'
        '404':
          description: customer response
          schema:
            type: object
        '500':
          description: customer response
          schema:
            type: object
      parameters:
        - name: customers
          in: body
          schema:
            $ref: '#/definitions/customer'
    patch:
      tags:
        - Customer
      description: Patchs all customers from the system that the user has access to
      operationId: patchCustomer
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: Customer
      responses:
        '204':
          description: customer response
          schema:
            type: array
            items:
              $ref: '#/definitions/customer'
        '404':
          description: customer response
          schema:
            type: object
        '500':
          description: customer response
          schema:
            type: object
    delete:
      tags:
        - Customer
      description: Deletes all customers from the system that the user has access to
      operationId: deleteCustomer
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: Customer
      responses:
        '204':
          description: customer response
          schema:
            type: array
            items:
              $ref: '#/definitions/customer'
        '404':
          description: customer response
          schema:
            type: object
        '500':
          description: customer response
          schema:
            type: object
      parameters:
        - name: customers
          in: body
          schema:
            $ref: '#/definitions/customer'
definitions:
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  customer:
    title: customer
    type: object
    properties:
      id:
        type: number
      firstName:
        type: string
      lastName:
        type: string
      age:
        type: number
      address:
        type: object
        properties:
          streetAddress:
            type: string
          city:
            type: string
          state:
            type: string
          postalCode:
            type: string
      phoneNumber:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
            number:
              type: string
          required:
            - type
            - number
responses:
  Standard500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/Error'
  PersonDoesNotExistResponse:
    description: Person does not exist.
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  gateway: datapower-gateway
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:8080'
  assembly:
    execute:
      - invoke:
          target-url: $(runtime-url)$(request.path)$(request.search)
          tls-profile: ''
          secure-gateway: false
    catch: []
