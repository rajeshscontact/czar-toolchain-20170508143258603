---
stages:
- name: BUILD US-South
  inputs:
  - service: ${REPO}
    type: git
    branch: ${BRANCH}
  triggers:
  - type: commit
  properties:
  - name: BXLOGIN_API_ENDPOINT
    value: ${BXLOGIN_API_ENDPOINT}
    type: text
  - name: BLUEMIX_API_ENDPOINT
    value: ${BLUEMIX_API_ENDPOINT}
    type: text
  - name: APIC_URL
    value: ${APIC_URL_US}
    type: text
  - name: APIC_USER
    value: ${APIC_USER}
    type: text
  - name: APIC_PASS
    value: ${APIC_PASS}
    type: secure
  - name: ORG
    value: ${ORG}
    type: text
  - name: SPACE
    value: ${SPACE}
    type: text
  jobs:
  - name: Publish Inventory Czar to US-South
    type: builder
    artifact_dir: ''
    build_type: npm
    script: |-
      #!/bin/bash
      # The default Node.js version is 0.10.40
      # To use Node.js 0.12.7, uncomment the following line:
      #export PATH=/opt/IBM/node-v0.12/bin:$PATH
      # To use Node.js 4.2.2, uncomment the following line:
      export PATH=/opt/IBM/node-v4.2/bin:$PATH
      #npm install
      echo $PWD
      ls -al .
      # apic api url
      APIC_API_URL=api.${APIC_URL}

      # set orgs
      CHARLST="[@|.|-|_]"
      ORGS=$(echo $ORG|sed "s/$CHARLST//g")-$SPACE
      ORGS=$(echo $ORGS|tr '[:upper:]' '[:lower:]')

      # Configure APIC cli
      echo -e "Start updating npm package"
      npm install -g npm
      echo -e "completed updating npm package"

      # Configure APIC cli
      echo -e "Start installing apiconnect cli"
      npm install -g apiconnect
      echo -e "completed installing apic cli"
      echo "yes" | apic
      echo "no" | apic

      echo -e "Login and config set catalog.."
      apic login -u $APIC_USER -p $APIC_PASS -s ${APIC_URL}
      apic config:set catalog=apic-catalog://${APIC_URL}/orgs/${ORGS}/catalogs/sb

      # install yaml
      if [ ! -f ./yaml ]; then
        wget https://github.com/mikefarah/yaml/releases/download/1.5/yaml_linux_amd64 -O yaml
        chmod +x yaml
      fi

      ls -l

      # pushing microapp
      #code to replace commit
      echo -e "login to bluemix"
      cf login -u $APIC_USER -p $APIC_PASS -a ${BLUEMIX_API_ENDPOINT} -o ${ORG} -s ${SPACE}
      echo -e "pushing micro app to bluemix"
      cf push

      # publish czar provider
      echo -e "publish czarProduct.."
      cd swaggerConfig
      #../yaml w --inplace bluemix.yaml
      cat bluemix.yaml
      apic publish bluemix-product.yaml
      cd ..
      echo -e "completed publishing of czarProduct.."
